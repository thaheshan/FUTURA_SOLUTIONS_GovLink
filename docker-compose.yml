version: '3.8'

services:
  # MongoDB Service
  mongodb:
    image: mongo:6.0
    container_name: sri_gov_mongodb
    restart: unless-stopped
    volumes:
      - mongodb_data:/data/db
      - ./Database/mongodb/init:/docker-entrypoint-initdb.d
      - ./logs/mongodb:/var/log/mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-gov_db}
    networks:
      - gov-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Service
  redis:
    image: redis:7.0-alpine
    container_name: sri_gov_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
      - ./Database/redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ./logs/redis:/var/log/redis
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - gov-network
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Service
  backend:
    build:
      context: ./backend_Setup
      dockerfile: Dockerfile
    container_name: sri_gov_backend
    restart: unless-stopped
    volumes:
      - ./backend_Setup:/app
      - ./Shared:/app/node_modules/@srilanka-gov/shared
      - ./logs/backend:/app/logs
      - ./uploads:/app/uploads
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      MONGO_HOST: mongodb
      MONGO_PORT: 27017
      MONGO_DATABASE: ${MONGO_DATABASE:-gov_db}
      MONGO_USERNAME: ${MONGO_USERNAME:-root}
      MONGO_PASSWORD: ${MONGO_PASSWORD:-password}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: ${JWT_SECRET:-supersecret}
      API_PORT: ${API_PORT:-5000}
      BCRYPT_ROUNDS: ${BCRYPT_ROUNDS:-10}
      RATE_LIMIT_WINDOW: ${RATE_LIMIT_WINDOW:-60000}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS:-100}
      MAX_FILE_SIZE: ${MAX_FILE_SIZE:-10485760}
      CORS_ORIGIN: ${CORS_ORIGIN:-*}
    ports:
      - "${API_PORT:-5000}:${API_PORT:-5000}"
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - gov-network

  # Frontend Service
  frontend:
    build:
      context: ./user-web
      dockerfile: Dockerfile
    container_name: sri_gov_frontend
    restart: unless-stopped
    volumes:
      - ./user-web:/app
      - ./Shared:/app/node_modules/@srilanka-gov/shared
      - ./logs/frontend:/app/logs
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL:-http://backend:5000}
      REACT_APP_WEBSOCKET_URL: ${REACT_APP_WEBSOCKET_URL:-ws://backend:5000}
      REACT_APP_APP_NAME: ${REACT_APP_APP_NAME:-GovLinkApp}
    ports:
      - "${WEB_PORT:-3000}:3000"
    depends_on:
      - backend
    networks:
      - gov-network

  # Mobile App (Expo)
  mobile:
    build:
      context: ./user-mobile
      dockerfile: Dockerfile
    container_name: sri_gov_mobile
    restart: unless-stopped
    volumes:
      - ./user-mobile:/app
      - ./Shared:/app/node_modules/@srilanka-gov/shared
    environment:
      EXPO_DEVTOOLS_LISTEN_ADDRESS: 0.0.0.0
      REACT_NATIVE_PACKAGER_HOSTNAME: host.docker.internal
    ports:
      - "19000:19000"
      - "19001:19001"
      - "19002:19002"
      - "19006:19006"
    command: npx expo start --tunnel
    depends_on:
      - backend
    networks:
      - gov-network

  # NGINX Reverse Proxy
  nginx:
    image: nginx:1.23-alpine
    container_name: sri_gov_nginx
    restart: unless-stopped
    volumes:
      - ./Docker-file/nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./Docker-file/nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
      - ./uploads:/var/www/uploads
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend
    networks:
      - gov-network

# Docker networks
networks:
  gov-network:
    driver: bridge

# Docker volumes
volumes:
  mongodb_data:
  redis_data:


